{ns hl7-fhir-r5-core.ConceptMap,
 import #{hl7-fhir-r5-core.DomainResource
          hl7-fhir-r5-core.markdown
          hl7-fhir-r5-core.BackboneElement
          hl7-fhir-r5-core.decimal
          hl7-fhir-r5-core.value-set.definition-topic
          hl7-fhir-r5-core.boolean
          zen.fhir
          hl7-fhir-r5-core.CodeableConcept
          hl7-fhir-r5-core.UsageContext
          hl7-fhir-r5-core.string
          hl7-fhir-r5-core.value-set.version-algorithm
          hl7-fhir-r5-core.value-set.jurisdiction
          hl7-fhir-r5-core.Element
          hl7-fhir-r5-core.dateTime
          hl7-fhir-r5-core.date
          hl7-fhir-r5-core.integer
          hl7-fhir-r5-core.ConceptMap
          hl7-fhir-r5-core.code
          hl7-fhir-r5-core.Identifier
          hl7-fhir-r5-core.value-set.conceptmap-attribute-type
          hl7-fhir-r5-core.Period
          hl7-fhir-r5-core.value-set.publication-status
          hl7-fhir-r5-core.canonical
          hl7-fhir-r5-core.RelatedArtifact
          hl7-fhir-r5-core.value-set.concept-map-relationship
          hl7-fhir-r5-core.Coding
          hl7-fhir-r5-core.Quantity
          hl7-fhir-r5-core.uri
          hl7-fhir-r5-core.ContactDetail
          hl7-fhir-r5-core.value-set.conceptmap-property-type
          hl7-fhir-r5-core.value-set.conceptmap-unmapped-mode},
 group-element-target-dependsOn-schema {:zen/tags #{zen/schema
                                                    zen.fhir/structure-schema},
                                        :zen.fhir/version "0.6.42",
                                        :confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                        :type zen/map,
                                        :keys {:attribute {:confirms #{hl7-fhir-r5-core.code/schema},
                                                           :zen/desc "A reference to a mapping attribute defined in ConceptMap.additionalAttribute"},
                                               :_attribute {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                               :value {:fhir/polymorphic true,
                                                       :type zen/map,
                                                       :exclusive-keys #{#{:string
                                                                           :code
                                                                           :Coding
                                                                           :Quantity
                                                                           :boolean}},
                                                       :keys {:code {:confirms #{hl7-fhir-r5-core.code/schema}},
                                                              :_code {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                              :Coding {:confirms #{hl7-fhir-r5-core.Coding/schema}},
                                                              :string {:confirms #{hl7-fhir-r5-core.string/schema}},
                                                              :_string {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                              :boolean {:confirms #{hl7-fhir-r5-core.boolean/schema}},
                                                              :_boolean {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                              :Quantity {:confirms #{hl7-fhir-r5-core.Quantity/schema}}},
                                                       :zen/desc "Value of the referenced data element"},
                                               :valueSet {:confirms #{hl7-fhir-r5-core.canonical/schema},
                                                          :zen/desc "The mapping depends on a data element with a value from this value set"},
                                               :_valueSet {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                                        :require #{:attribute},
                                        :zen/desc "Other properties required for this mapping"},
 schema {:zen.fhir/version "0.6.42",
         :confirms #{hl7-fhir-r5-core.DomainResource/schema
                     zen.fhir/Resource},
         :zen/tags #{zen/schema zen.fhir/base-schema},
         :zen.fhir/profileUri "http://hl7.org/fhir/StructureDefinition/ConceptMap",
         :require #{:status},
         :type zen/map,
         :zen/desc "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
         :keys {:description {:confirms #{hl7-fhir-r5-core.markdown/schema},
                              :zen/desc "Natural language description of the concept map"},
                :date {:confirms #{hl7-fhir-r5-core.dateTime/schema},
                       :fhir/flags #{:SU},
                       :zen/desc "Date last changed"},
                :group {:type zen/vector,
                        :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                :type zen/map,
                                :keys {:source {:confirms #{hl7-fhir-r5-core.canonical/schema},
                                                :zen/desc "Source system where concepts to be mapped are defined"},
                                       :_source {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                       :target {:confirms #{hl7-fhir-r5-core.canonical/schema},
                                                :zen/desc "Target system that the concepts are to be mapped to"},
                                       :_target {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                       :element {:type zen/vector,
                                                 :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                                         :type zen/map,
                                                         :keys {:noMap {:confirms #{hl7-fhir-r5-core.boolean/schema},
                                                                        :zen/desc "No mapping to a target concept for this source concept"},
                                                                :_code {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                :_noMap {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                :valueSet {:confirms #{hl7-fhir-r5-core.canonical/schema},
                                                                           :zen/desc "Identifies the set of concepts being mapped"},
                                                                :code {:confirms #{hl7-fhir-r5-core.code/schema},
                                                                       :zen/desc "Identifies element being mapped"},
                                                                :_valueSet {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                :display {:confirms #{hl7-fhir-r5-core.string/schema},
                                                                          :zen/desc "Display for the code"},
                                                                :target {:type zen/vector,
                                                                         :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                                                                 :type zen/map,
                                                                                 :keys {:_code {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                                        :dependsOn {:type zen/vector,
                                                                                                    :every {:confirms #{hl7-fhir-r5-core.ConceptMap/group-element-target-dependsOn-schema}}},
                                                                                        :property {:type zen/vector,
                                                                                                   :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                                                                                           :type zen/map,
                                                                                                           :keys {:code {:confirms #{hl7-fhir-r5-core.code/schema},
                                                                                                                         :zen/desc "Reference to ConceptMap.property.code"},
                                                                                                                  :_code {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                                                                  :value {:fhir/polymorphic true,
                                                                                                                          :type zen/map,
                                                                                                                          :exclusive-keys #{#{:string
                                                                                                                                              :dateTime
                                                                                                                                              :integer
                                                                                                                                              :decimal
                                                                                                                                              :code
                                                                                                                                              :Coding
                                                                                                                                              :boolean}},
                                                                                                                          :keys {:_decimal {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                                                                                 :_code {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                                                                                 :_dateTime {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                                                                                 :string {:confirms #{hl7-fhir-r5-core.string/schema}},
                                                                                                                                 :dateTime {:confirms #{hl7-fhir-r5-core.dateTime/schema}},
                                                                                                                                 :integer {:confirms #{hl7-fhir-r5-core.integer/schema}},
                                                                                                                                 :_boolean {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                                                                                 :decimal {:confirms #{hl7-fhir-r5-core.decimal/schema}},
                                                                                                                                 :code {:confirms #{hl7-fhir-r5-core.code/schema}},
                                                                                                                                 :Coding {:confirms #{hl7-fhir-r5-core.Coding/schema}},
                                                                                                                                 :_integer {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                                                                                 :boolean {:confirms #{hl7-fhir-r5-core.boolean/schema}},
                                                                                                                                 :_string {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                                                                                                                          :zen/desc "Value of the property for this concept"}},
                                                                                                           :require #{:value
                                                                                                                      :code},
                                                                                                           :zen/desc "Property value for the source -> target mapping"}},
                                                                                        :relationship {:confirms #{hl7-fhir-r5-core.code/schema},
                                                                                                       :fhir/flags #{:?!},
                                                                                                       :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.concept-map-relationship/value-set,
                                                                                                                            :strength :required},
                                                                                                       :zen/desc "related-to | equivalent | source-is-narrower-than-target | source-is-broader-than-target | not-related-to"},
                                                                                        :_relationship {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                                        :product {:type zen/vector,
                                                                                                  :every {:confirms #{hl7-fhir-r5-core.ConceptMap/group-element-target-dependsOn-schema},
                                                                                                          :zen/desc "Other data elements that this mapping also produces"}},
                                                                                        :valueSet {:confirms #{hl7-fhir-r5-core.canonical/schema},
                                                                                                   :zen/desc "Identifies the set of target concepts"},
                                                                                        :comment {:confirms #{hl7-fhir-r5-core.string/schema},
                                                                                                  :zen/desc "Description of status/issues in mapping"},
                                                                                        :code {:confirms #{hl7-fhir-r5-core.code/schema},
                                                                                               :zen/desc "Code that identifies the target element"},
                                                                                        :_valueSet {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                                        :display {:confirms #{hl7-fhir-r5-core.string/schema},
                                                                                                  :zen/desc "Display for the code"},
                                                                                        :_comment {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                                        :_display {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                                                                                 :require #{:relationship},
                                                                                 :zen/desc "Concept in target system for element"}},
                                                                :_display {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                                                         :zen/desc "Mappings for a concept from the source set"},
                                                 :minItems 1},
                                       :unmapped {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                                  :type zen/map,
                                                  :keys {:_code {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                         :_otherMap {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                         :mode {:confirms #{hl7-fhir-r5-core.code/schema},
                                                                :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.conceptmap-unmapped-mode/value-set,
                                                                                     :strength :required},
                                                                :zen/desc "use-source-code | fixed | other-map"},
                                                         :relationship {:confirms #{hl7-fhir-r5-core.code/schema},
                                                                        :fhir/flags #{:?!},
                                                                        :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.concept-map-relationship/value-set,
                                                                                             :strength :required},
                                                                        :zen/desc "related-to | equivalent | source-is-narrower-than-target | source-is-broader-than-target | not-related-to"},
                                                         :_relationship {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                         :otherMap {:confirms #{hl7-fhir-r5-core.canonical/schema},
                                                                    :zen/desc "canonical reference to an additional ConceptMap to use for mapping if the source concept is unmapped"},
                                                         :valueSet {:confirms #{hl7-fhir-r5-core.canonical/schema},
                                                                    :zen/desc "Fixed code set when mode = fixed"},
                                                         :code {:confirms #{hl7-fhir-r5-core.code/schema},
                                                                :zen/desc "Fixed code when mode = fixed"},
                                                         :_valueSet {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                         :display {:confirms #{hl7-fhir-r5-core.string/schema},
                                                                   :zen/desc "Display for the code"},
                                                         :_mode {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                         :_display {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                                                  :require #{:mode},
                                                  :zen/desc "What to do when there is no mapping target for the source concept and ConceptMap.group.element.noMap is not true"}},
                                :require #{:element},
                                :zen/desc "Same source and target systems"}},
                :endorser {:type zen/vector,
                           :every {:confirms #{hl7-fhir-r5-core.ContactDetail/schema},
                                   :zen/desc "Who endorsed the ConceptMap"}},
                :publisher {:confirms #{hl7-fhir-r5-core.string/schema},
                            :fhir/flags #{:SU},
                            :zen/desc "Name of the publisher/steward (organization or individual)"},
                :approvalDate {:confirms #{hl7-fhir-r5-core.date/schema},
                               :zen/desc "When the ConceptMap was approved by publisher"},
                :jurisdiction {:type zen/vector,
                               :every {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                       :fhir/flags #{:SU},
                                       :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.jurisdiction/value-set,
                                                            :strength :extensible},
                                       :zen/desc "Intended jurisdiction for concept map (if applicable)"}},
                :_publisher {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_copyrightLabel {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :purpose {:confirms #{hl7-fhir-r5-core.markdown/schema},
                          :zen/desc "Why this concept map is defined"},
                :_date {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :property {:type zen/vector,
                           :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                   :type zen/map,
                                   :keys {:description {:confirms #{hl7-fhir-r5-core.string/schema},
                                                        :fhir/flags #{:SU},
                                                        :zen/desc "Why the property is defined, and/or what it conveys"},
                                          :_code {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                          :system {:confirms #{hl7-fhir-r5-core.canonical/schema},
                                                   :fhir/flags #{:SU},
                                                   :zen/desc "The CodeSystem from which code values come"},
                                          :_uri {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                          :_type {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                          :type {:confirms #{hl7-fhir-r5-core.code/schema},
                                                 :fhir/flags #{:SU},
                                                 :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.conceptmap-property-type/value-set,
                                                                      :strength :required},
                                                 :zen/desc "Coding | string | integer | boolean | dateTime | decimal | code"},
                                          :_description {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                          :code {:confirms #{hl7-fhir-r5-core.code/schema},
                                                 :fhir/flags #{:SU},
                                                 :zen/desc "Identifies the property on the mappings, and when referred to in the $translate operation"},
                                          :uri {:confirms #{hl7-fhir-r5-core.uri/schema},
                                                :fhir/flags #{:SU},
                                                :zen/desc "Formal identifier for the property"},
                                          :_system {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                                   :require #{:type :code},
                                   :fhir/flags #{:SU},
                                   :zen/desc "Additional properties of the mapping"}},
                :name {:confirms #{hl7-fhir-r5-core.string/schema},
                       :fhir/flags #{:SU},
                       :zen/desc "Name for this concept map (computer friendly)"},
                :sourceScope {:fhir/polymorphic true,
                              :type zen/map,
                              :exclusive-keys #{#{:canonical :uri}},
                              :keys {:uri {:confirms #{hl7-fhir-r5-core.uri/schema}},
                                     :_uri {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                     :canonical {:confirms #{hl7-fhir-r5-core.canonical/schema}},
                                     :_canonical {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                              :fhir/flags #{:SU},
                              :zen/desc "The source value set that contains the concepts that are being mapped"},
                :_status {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :copyrightLabel {:confirms #{hl7-fhir-r5-core.string/schema},
                                 :zen/desc "Copyright holder and year(s)"},
                :_experimental {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :useContext {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.UsageContext/schema},
                                     :fhir/flags #{:SU},
                                     :zen/desc "The context that the content is intended to support"}},
                :copyright {:confirms #{hl7-fhir-r5-core.markdown/schema},
                            :zen/desc "Use and/or publishing restrictions"},
                :versionAlgorithm {:fhir/polymorphic true,
                                   :type zen/map,
                                   :exclusive-keys #{#{:string
                                                       :Coding}},
                                   :keys {:string {:confirms #{hl7-fhir-r5-core.string/schema}},
                                          :_string {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                          :Coding {:confirms #{hl7-fhir-r5-core.Coding/schema}}},
                                   :fhir/flags #{:SU},
                                   :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.version-algorithm/value-set,
                                                        :strength :extensible},
                                   :zen/desc "How to compare versions"},
                :_approvalDate {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :experimental {:confirms #{hl7-fhir-r5-core.boolean/schema},
                               :fhir/flags #{:SU},
                               :zen/desc "For testing purposes, not real usage"},
                :topic {:type zen/vector,
                        :every {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.definition-topic/value-set,
                                                     :strength :example},
                                :zen/desc "E.g. Education, Treatment, Assessment, etc"}},
                :title {:confirms #{hl7-fhir-r5-core.string/schema},
                        :fhir/flags #{:SU},
                        :zen/desc "Name for this concept map (human friendly)"},
                :_description {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :targetScope {:fhir/polymorphic true,
                              :type zen/map,
                              :exclusive-keys #{#{:canonical :uri}},
                              :keys {:uri {:confirms #{hl7-fhir-r5-core.uri/schema}},
                                     :_uri {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                     :canonical {:confirms #{hl7-fhir-r5-core.canonical/schema}},
                                     :_canonical {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                              :fhir/flags #{:SU},
                              :zen/desc "The target value set which provides context for the mappings"},
                :author {:type zen/vector,
                         :every {:confirms #{hl7-fhir-r5-core.ContactDetail/schema},
                                 :zen/desc "Who authored the ConceptMap"}},
                :_purpose {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_lastReviewDate {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :status {:confirms #{hl7-fhir-r5-core.code/schema},
                         :fhir/flags #{:SU :?!},
                         :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.publication-status/value-set,
                                              :strength :required},
                         :zen/desc "draft | active | retired | unknown"},
                :_name {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :url {:confirms #{hl7-fhir-r5-core.uri/schema},
                      :fhir/flags #{:SU},
                      :zen/desc "Canonical identifier for this concept map, represented as a URI (globally unique)"},
                :identifier {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.Identifier/schema},
                                     :fhir/flags #{:SU},
                                     :zen/desc "Additional identifier for the concept map"}},
                :lastReviewDate {:confirms #{hl7-fhir-r5-core.date/schema},
                                 :zen/desc "When the ConceptMap was last reviewed by the publisher"},
                :editor {:type zen/vector,
                         :every {:confirms #{hl7-fhir-r5-core.ContactDetail/schema},
                                 :zen/desc "Who edited the ConceptMap"}},
                :additionalAttribute {:type zen/vector,
                                      :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                              :type zen/map,
                                              :keys {:code {:confirms #{hl7-fhir-r5-core.code/schema},
                                                            :fhir/flags #{:SU},
                                                            :zen/desc "Identifies this additional attribute through this resource"},
                                                     :_code {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                     :uri {:confirms #{hl7-fhir-r5-core.uri/schema},
                                                           :fhir/flags #{:SU},
                                                           :zen/desc "Formal identifier for the data element referred to in this attribte"},
                                                     :_uri {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                     :description {:confirms #{hl7-fhir-r5-core.string/schema},
                                                                   :fhir/flags #{:SU},
                                                                   :zen/desc "Why the additional attribute is defined, and/or what the data element it refers to is"},
                                                     :_description {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                     :type {:confirms #{hl7-fhir-r5-core.code/schema},
                                                            :fhir/flags #{:SU},
                                                            :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.conceptmap-attribute-type/value-set,
                                                                                 :strength :required},
                                                            :zen/desc "code | Coding | string | boolean | Quantity"},
                                                     :_type {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                                              :require #{:type :code},
                                              :fhir/flags #{:SU},
                                              :zen/desc "Definition of an additional attribute to act as a data source or target"}},
                :_copyright {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_title {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :reviewer {:type zen/vector,
                           :every {:confirms #{hl7-fhir-r5-core.ContactDetail/schema},
                                   :zen/desc "Who reviewed the ConceptMap"}},
                :version {:confirms #{hl7-fhir-r5-core.string/schema},
                          :fhir/flags #{:SU},
                          :zen/desc "Business version of the concept map"},
                :_version {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :relatedArtifact {:type zen/vector,
                                  :every {:confirms #{hl7-fhir-r5-core.RelatedArtifact/schema},
                                          :zen/desc "Additional documentation, citations, etc"}},
                :contact {:type zen/vector,
                          :every {:confirms #{hl7-fhir-r5-core.ContactDetail/schema},
                                  :fhir/flags #{:SU},
                                  :zen/desc "Contact details for the publisher"}},
                :_url {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :effectivePeriod {:confirms #{hl7-fhir-r5-core.Period/schema},
                                  :fhir/flags #{:SU},
                                  :zen/desc "When the ConceptMap is expected to be used"}},
         :zen.fhir/type "ConceptMap"}}
