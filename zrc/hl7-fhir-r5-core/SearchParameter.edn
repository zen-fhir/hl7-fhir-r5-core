{ns hl7-fhir-r5-core.SearchParameter,
 import #{hl7-fhir-r5-core.DomainResource
          hl7-fhir-r5-core.value-set.version-independent-all-resource-types
          hl7-fhir-r5-core.markdown
          hl7-fhir-r5-core.value-set.search-modifier-code
          hl7-fhir-r5-core.BackboneElement
          hl7-fhir-r5-core.boolean
          zen.fhir
          hl7-fhir-r5-core.CodeableConcept
          hl7-fhir-r5-core.UsageContext
          hl7-fhir-r5-core.string
          hl7-fhir-r5-core.value-set.version-algorithm
          hl7-fhir-r5-core.value-set.jurisdiction
          hl7-fhir-r5-core.Element
          hl7-fhir-r5-core.value-set.search-param-type
          hl7-fhir-r5-core.value-set.search-processingmode
          hl7-fhir-r5-core.dateTime
          hl7-fhir-r5-core.code
          hl7-fhir-r5-core.Identifier
          hl7-fhir-r5-core.value-set.publication-status
          hl7-fhir-r5-core.canonical
          hl7-fhir-r5-core.value-set.search-comparator
          hl7-fhir-r5-core.Coding
          hl7-fhir-r5-core.uri
          hl7-fhir-r5-core.ContactDetail},
 schema {:zen.fhir/version "0.6.25-1",
         :confirms #{hl7-fhir-r5-core.DomainResource/schema
                     zen.fhir/Resource},
         :zen/tags #{zen/schema zen.fhir/base-schema},
         :zen.fhir/profileUri "http://hl7.org/fhir/StructureDefinition/SearchParameter",
         :require #{:description :name :type :status :url :code :base},
         :type zen/map,
         :zen/desc "A search parameter that defines a named search item that can be used to search/filter on a resource.",
         :keys {:_base {:type zen/vector,
                        :every {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                :constraint {:confirms #{hl7-fhir-r5-core.string/schema},
                             :zen/desc "FHIRPath expression that constraints the usage of this SearchParamete"},
                :description {:confirms #{hl7-fhir-r5-core.markdown/schema},
                              :fhir/flags #{:SU},
                              :zen/desc "Natural language description of the search parameter"},
                :_code {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_constraint {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :date {:confirms #{hl7-fhir-r5-core.dateTime/schema},
                       :fhir/flags #{:SU},
                       :zen/desc "Date last changed"},
                :expression {:confirms #{hl7-fhir-r5-core.string/schema},
                             :zen/desc "FHIRPath expression that extracts the values"},
                :modifier {:type zen/vector,
                           :every {:confirms #{hl7-fhir-r5-core.code/schema},
                                   :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.search-modifier-code/value-set,
                                                        :strength :required},
                                   :zen/desc "missing | exact | contains | not | text | in | not-in | below | above | type | identifier | of-type | code-text | text-advanced | iterate"}},
                :publisher {:confirms #{hl7-fhir-r5-core.string/schema},
                            :fhir/flags #{:SU},
                            :zen/desc "Name of the publisher/steward (organization or individual)"},
                :multipleAnd {:confirms #{hl7-fhir-r5-core.boolean/schema},
                              :zen/desc "Allow multiple parameters (and)"},
                :_comparator {:type zen/vector,
                              :every {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                :jurisdiction {:type zen/vector,
                               :every {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                       :fhir/flags #{:SU},
                                       :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.jurisdiction/value-set,
                                                            :strength :extensible},
                                       :zen/desc "Intended jurisdiction for search parameter (if applicable)"}},
                :_publisher {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_chain {:type zen/vector,
                         :every {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                :_copyrightLabel {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :derivedFrom {:confirms #{hl7-fhir-r5-core.canonical/schema},
                              :zen/desc "Original definition for the search parameter"},
                :purpose {:confirms #{hl7-fhir-r5-core.markdown/schema},
                          :zen/desc "Why this search parameter is defined"},
                :_date {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :multipleOr {:confirms #{hl7-fhir-r5-core.boolean/schema},
                             :zen/desc "Allow multiple values per parameter (or)"},
                :_derivedFrom {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :name {:confirms #{hl7-fhir-r5-core.string/schema},
                       :fhir/flags #{:SU},
                       :zen/desc "Name for this search parameter (computer friendly)"},
                :_type {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_status {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :copyrightLabel {:confirms #{hl7-fhir-r5-core.string/schema},
                                 :zen/desc "Copyright holder and year(s)"},
                :_experimental {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :useContext {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.UsageContext/schema},
                                     :fhir/flags #{:SU},
                                     :zen/desc "The context that the content is intended to support"}},
                :copyright {:confirms #{hl7-fhir-r5-core.markdown/schema},
                            :zen/desc "Use and/or publishing restrictions"},
                :versionAlgorithm {:fhir/polymorphic true,
                                   :type zen/map,
                                   :exclusive-keys #{#{:string
                                                       :Coding}},
                                   :keys {:string {:confirms #{hl7-fhir-r5-core.string/schema}},
                                          :_string {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                          :Coding {:confirms #{hl7-fhir-r5-core.Coding/schema}}},
                                   :fhir/flags #{:SU},
                                   :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.version-algorithm/value-set,
                                                        :strength :extensible},
                                   :zen/desc "How to compare versions"},
                :type {:confirms #{hl7-fhir-r5-core.code/schema},
                       :fhir/flags #{:SU},
                       :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.search-param-type/value-set,
                                            :strength :required},
                       :zen/desc "number | date | string | token | reference | composite | quantity | uri | special"},
                :experimental {:confirms #{hl7-fhir-r5-core.boolean/schema},
                               :fhir/flags #{:SU},
                               :zen/desc "For testing purposes, not real usage"},
                :component {:type zen/vector,
                            :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                    :type zen/map,
                                    :keys {:definition {:confirms #{hl7-fhir-r5-core.canonical/schema},
                                                        :zen/desc "Defines how the part works"},
                                           :_definition {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                           :expression {:confirms #{hl7-fhir-r5-core.string/schema},
                                                        :zen/desc "Subexpression relative to main expression"},
                                           :_expression {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                                    :require #{:definition
                                               :expression},
                                    :zen/desc "For Composite resources to define the parts"}},
                :_expression {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :title {:confirms #{hl7-fhir-r5-core.string/schema},
                        :fhir/flags #{:SU},
                        :zen/desc "Name for this search parameter (human friendly)"},
                :_description {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_purpose {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :status {:confirms #{hl7-fhir-r5-core.code/schema},
                         :fhir/flags #{:SU :?!},
                         :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.publication-status/value-set,
                                              :strength :required},
                         :zen/desc "draft | active | retired | unknown"},
                :_target {:type zen/vector,
                          :every {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                :_name {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :chain {:type zen/vector,
                        :every {:confirms #{hl7-fhir-r5-core.string/schema},
                                :zen/desc "Chained names supported"}},
                :processingMode {:confirms #{hl7-fhir-r5-core.code/schema},
                                 :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.search-processingmode/value-set,
                                                      :strength :required},
                                 :zen/desc "normal | phonetic | other"},
                :_multipleOr {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_processingMode {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :url {:confirms #{hl7-fhir-r5-core.uri/schema},
                      :fhir/flags #{:SU},
                      :zen/desc "Canonical identifier for this search parameter, represented as a URI (globally unique)"},
                :code {:confirms #{hl7-fhir-r5-core.code/schema},
                       :fhir/flags #{:SU},
                       :zen/desc "Recommended name for parameter in search url"},
                :identifier {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.Identifier/schema},
                                     :fhir/flags #{:SU},
                                     :zen/desc "Additional identifier for the search parameter (business identifier)"}},
                :comparator {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.code/schema},
                                     :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.search-comparator/value-set,
                                                          :strength :required},
                                     :zen/desc "eq | ne | gt | lt | ge | le | sa | eb | ap"}},
                :_copyright {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_title {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :target {:type zen/vector,
                         :every {:confirms #{hl7-fhir-r5-core.code/schema},
                                 :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.version-independent-all-resource-types/value-set,
                                                      :strength :required},
                                 :zen/desc "Types of resource (if a resource reference)"}},
                :base {:type zen/vector,
                       :every {:confirms #{hl7-fhir-r5-core.code/schema},
                               :fhir/flags #{:SU},
                               :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.version-independent-all-resource-types/value-set,
                                                    :strength :required},
                               :zen/desc "The resource type(s) this search parameter applies to"},
                       :minItems 1},
                :version {:confirms #{hl7-fhir-r5-core.string/schema},
                          :fhir/flags #{:SU},
                          :zen/desc "Business version of the search parameter"},
                :_version {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_modifier {:type zen/vector,
                            :every {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                :contact {:type zen/vector,
                          :every {:confirms #{hl7-fhir-r5-core.ContactDetail/schema},
                                  :fhir/flags #{:SU},
                                  :zen/desc "Contact details for the publisher"}},
                :_url {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_multipleAnd {:confirms #{hl7-fhir-r5-core.Element/schema}}},
         :zen.fhir/type "SearchParameter"}}
