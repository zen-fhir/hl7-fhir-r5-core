{ns hl7-fhir-r5-core.DataRequirement,
 import #{zen.fhir
          hl7-fhir-r5-core.positiveInt
          hl7-fhir-r5-core.CodeableConcept
          hl7-fhir-r5-core.Group
          hl7-fhir-r5-core.string
          hl7-fhir-r5-core.Element
          hl7-fhir-r5-core.value-set.sort-direction
          hl7-fhir-r5-core.dateTime
          hl7-fhir-r5-core.value-set.value-filter-comparator
          hl7-fhir-r5-core.Reference
          hl7-fhir-r5-core.code
          hl7-fhir-r5-core.Period
          hl7-fhir-r5-core.canonical
          hl7-fhir-r5-core.Duration
          hl7-fhir-r5-core.Coding
          hl7-fhir-r5-core.value-set.participant-resource-types
          hl7-fhir-r5-core.DataType
          hl7-fhir-r5-core.value-set.fhir-types},
 schema {:zen.fhir/version "0.6.42",
         :confirms #{hl7-fhir-r5-core.DataType/schema},
         :zen/tags #{zen/schema zen.fhir/structure-schema},
         :zen.fhir/profileUri "http://hl7.org/fhir/StructureDefinition/DataRequirement",
         :require #{:type},
         :type zen/map,
         :zen/desc "DataRequirement Type: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
         :keys {:valueFilter {:type zen/vector,
                              :every {:confirms #{hl7-fhir-r5-core.Element/schema},
                                      :type zen/map,
                                      :keys {:path {:confirms #{hl7-fhir-r5-core.string/schema},
                                                    :fhir/flags #{:SU},
                                                    :zen/desc "An attribute to filter on"},
                                             :_path {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                             :searchParam {:confirms #{hl7-fhir-r5-core.string/schema},
                                                           :fhir/flags #{:SU},
                                                           :zen/desc "A parameter to search on"},
                                             :_searchParam {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                             :comparator {:confirms #{hl7-fhir-r5-core.code/schema},
                                                          :fhir/flags #{:SU},
                                                          :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.value-filter-comparator/value-set,
                                                                               :strength :required},
                                                          :zen/desc "eq | gt | lt | ge | le | sa | eb"},
                                             :_comparator {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                             :value {:fhir/polymorphic true,
                                                     :type zen/map,
                                                     :exclusive-keys #{#{:dateTime
                                                                         :Period
                                                                         :Duration}},
                                                     :keys {:dateTime {:confirms #{hl7-fhir-r5-core.dateTime/schema}},
                                                            :_dateTime {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                            :Period {:confirms #{hl7-fhir-r5-core.Period/schema}},
                                                            :Duration {:confirms #{hl7-fhir-r5-core.Duration/schema}}},
                                                     :fhir/flags #{:SU},
                                                     :zen/desc "The value of the filter, as a Period, DateTime, or Duration value"}},
                                      :fhir/flags #{:SU},
                                      :zen/desc "What values are expected"}},
                :limit {:confirms #{hl7-fhir-r5-core.positiveInt/schema},
                        :fhir/flags #{:SU},
                        :zen/desc "Number of results"},
                :_limit {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_mustSupport {:type zen/vector,
                               :every {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                :_type {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :type {:confirms #{hl7-fhir-r5-core.code/schema},
                       :fhir/flags #{:SU},
                       :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.fhir-types/value-set,
                                            :strength :required},
                       :zen/desc "The type of the required data"},
                :mustSupport {:type zen/vector,
                              :every {:confirms #{hl7-fhir-r5-core.string/schema},
                                      :fhir/flags #{:SU},
                                      :zen/desc "Indicates specific structure elements that are referenced by the knowledge module"}},
                :_profile {:type zen/vector,
                           :every {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                :codeFilter {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.Element/schema},
                                     :type zen/map,
                                     :keys {:path {:confirms #{hl7-fhir-r5-core.string/schema},
                                                   :fhir/flags #{:SU},
                                                   :zen/desc "A code-valued attribute to filter on"},
                                            :_path {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                            :searchParam {:confirms #{hl7-fhir-r5-core.string/schema},
                                                          :fhir/flags #{:SU},
                                                          :zen/desc "A coded (token) parameter to search on"},
                                            :_searchParam {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                            :valueSet {:confirms #{hl7-fhir-r5-core.canonical/schema},
                                                       :fhir/flags #{:SU},
                                                       :zen/desc "ValueSet for the filter"},
                                            :_valueSet {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                            :code {:type zen/vector,
                                                   :every {:confirms #{hl7-fhir-r5-core.Coding/schema},
                                                           :fhir/flags #{:SU},
                                                           :zen/desc "What code is expected"}}},
                                     :fhir/flags #{:SU},
                                     :zen/desc "What codes are expected"}},
                :subject {:fhir/polymorphic true,
                          :type zen/map,
                          :exclusive-keys #{#{:CodeableConcept
                                              :Reference}},
                          :keys {:CodeableConcept {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema}},
                                 :Reference {:confirms #{hl7-fhir-r5-core.Reference/schema
                                                         zen.fhir/Reference},
                                             :zen.fhir/reference {:refers #{hl7-fhir-r5-core.Group/schema}}}},
                          :fhir/flags #{:SU},
                          :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.participant-resource-types/value-set,
                                               :strength :extensible},
                          :zen/desc "E.g. Patient, Practitioner, RelatedPerson, Organization, Location, Device"},
                :dateFilter {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.Element/schema},
                                     :type zen/map,
                                     :keys {:path {:confirms #{hl7-fhir-r5-core.string/schema},
                                                   :fhir/flags #{:SU},
                                                   :zen/desc "A date-valued attribute to filter on"},
                                            :_path {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                            :searchParam {:confirms #{hl7-fhir-r5-core.string/schema},
                                                          :fhir/flags #{:SU},
                                                          :zen/desc "A date valued parameter to search on"},
                                            :_searchParam {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                            :value {:fhir/polymorphic true,
                                                    :type zen/map,
                                                    :exclusive-keys #{#{:dateTime
                                                                        :Period
                                                                        :Duration}},
                                                    :keys {:dateTime {:confirms #{hl7-fhir-r5-core.dateTime/schema}},
                                                           :_dateTime {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                           :Period {:confirms #{hl7-fhir-r5-core.Period/schema}},
                                                           :Duration {:confirms #{hl7-fhir-r5-core.Duration/schema}}},
                                                    :fhir/flags #{:SU},
                                                    :zen/desc "The value of the filter, as a Period, DateTime, or Duration value"}},
                                     :fhir/flags #{:SU},
                                     :zen/desc "What dates/date ranges are expected"}},
                :sort {:type zen/vector,
                       :every {:confirms #{hl7-fhir-r5-core.Element/schema},
                               :type zen/map,
                               :keys {:path {:confirms #{hl7-fhir-r5-core.string/schema},
                                             :fhir/flags #{:SU},
                                             :zen/desc "The name of the attribute to perform the sort"},
                                      :_path {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                      :direction {:confirms #{hl7-fhir-r5-core.code/schema},
                                                  :fhir/flags #{:SU},
                                                  :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.sort-direction/value-set,
                                                                       :strength :required},
                                                  :zen/desc "ascending | descending"},
                                      :_direction {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                               :require #{:path :direction},
                               :fhir/flags #{:SU},
                               :zen/desc "Order of the results"}},
                :profile {:type zen/vector,
                          :every {:confirms #{hl7-fhir-r5-core.canonical/schema},
                                  :fhir/flags #{:SU},
                                  :zen/desc "The profile of the required data"}}},
         :zen.fhir/type "DataRequirement"}}
