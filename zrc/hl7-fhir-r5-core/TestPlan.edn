{ns hl7-fhir-r5-core.TestPlan,
 import #{hl7-fhir-r5-core.DomainResource
          hl7-fhir-r5-core.markdown
          hl7-fhir-r5-core.BackboneElement
          hl7-fhir-r5-core.CodeableReference
          hl7-fhir-r5-core.boolean
          zen.fhir
          hl7-fhir-r5-core.CodeableConcept
          hl7-fhir-r5-core.UsageContext
          hl7-fhir-r5-core.string
          hl7-fhir-r5-core.value-set.version-algorithm
          hl7-fhir-r5-core.value-set.jurisdiction
          hl7-fhir-r5-core.Element
          hl7-fhir-r5-core.dateTime
          hl7-fhir-r5-core.Reference
          hl7-fhir-r5-core.integer
          hl7-fhir-r5-core.code
          hl7-fhir-r5-core.Identifier
          hl7-fhir-r5-core.value-set.publication-status
          hl7-fhir-r5-core.value-set.testscript-scope-phase-codes
          hl7-fhir-r5-core.Coding
          hl7-fhir-r5-core.uri
          hl7-fhir-r5-core.ContactDetail},
 schema {:zen.fhir/version "0.6.25-1",
         :confirms #{hl7-fhir-r5-core.DomainResource/schema
                     zen.fhir/Resource},
         :zen/tags #{zen/schema zen.fhir/base-schema},
         :zen.fhir/profileUri "http://hl7.org/fhir/StructureDefinition/TestPlan",
         :require #{:status},
         :type zen/map,
         :zen/desc "A plan for executing testing on an artifact or specifications",
         :keys {:description {:confirms #{hl7-fhir-r5-core.markdown/schema},
                              :zen/desc "Natural language description of the test plan"},
                :category {:type zen/vector,
                           :every {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                   :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.testscript-scope-phase-codes/value-set,
                                                        :strength :example},
                                   :zen/desc "The category of the Test Plan - can be acceptance, unit, performance"}},
                :exitCriteria {:confirms #{hl7-fhir-r5-core.markdown/schema},
                               :zen/desc "The threshold or criteria for the test plan to be considered successfully executed - narrative"},
                :date {:confirms #{hl7-fhir-r5-core.dateTime/schema},
                       :fhir/flags #{:SU},
                       :zen/desc "Date last changed"},
                :dependency {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                     :type zen/map,
                                     :keys {:description {:confirms #{hl7-fhir-r5-core.markdown/schema},
                                                          :zen/desc "Description of the dependency criterium"},
                                            :_description {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                            :predecessor {:confirms #{hl7-fhir-r5-core.Reference/schema
                                                                      zen.fhir/Reference},
                                                          :zen.fhir/reference {:refers #{}},
                                                          :zen/desc "Link to predecessor test plans"}},
                                     :zen/desc "The required criteria to execute the test plan - e.g. preconditions, previous tests"}},
                :publisher {:confirms #{hl7-fhir-r5-core.string/schema},
                            :fhir/flags #{:SU},
                            :zen/desc "Name of the publisher/steward (organization or individual)"},
                :jurisdiction {:type zen/vector,
                               :every {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                       :fhir/flags #{:SU},
                                       :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.jurisdiction/value-set,
                                                            :strength :extensible},
                                       :zen/desc "Intended jurisdiction where the test plan applies (if applicable)"}},
                :_publisher {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_copyrightLabel {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :purpose {:confirms #{hl7-fhir-r5-core.markdown/schema},
                          :zen/desc "Why this test plan is defined"},
                :_date {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :name {:confirms #{hl7-fhir-r5-core.string/schema},
                       :fhir/flags #{:SU},
                       :zen/desc "Name for this test plan (computer friendly)"},
                :_status {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :copyrightLabel {:confirms #{hl7-fhir-r5-core.string/schema},
                                 :zen/desc "Copyright holder and year(s)"},
                :_experimental {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :useContext {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.UsageContext/schema},
                                     :fhir/flags #{:SU},
                                     :zen/desc "The context that the content is intended to support"}},
                :copyright {:confirms #{hl7-fhir-r5-core.markdown/schema},
                            :zen/desc "Use and/or publishing restrictions"},
                :versionAlgorithm {:fhir/polymorphic true,
                                   :type zen/map,
                                   :exclusive-keys #{#{:string
                                                       :Coding}},
                                   :keys {:string {:confirms #{hl7-fhir-r5-core.string/schema}},
                                          :_string {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                          :Coding {:confirms #{hl7-fhir-r5-core.Coding/schema}}},
                                   :fhir/flags #{:SU},
                                   :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.version-algorithm/value-set,
                                                        :strength :extensible},
                                   :zen/desc "How to compare versions"},
                :experimental {:confirms #{hl7-fhir-r5-core.boolean/schema},
                               :fhir/flags #{:SU},
                               :zen/desc "For testing purposes, not real usage"},
                :scope {:type zen/vector,
                        :every {:confirms #{hl7-fhir-r5-core.Reference/schema
                                            zen.fhir/Reference},
                                :zen.fhir/reference {:refers #{}},
                                :zen/desc "What is being tested with this Test Plan - a conformance resource, or narrative criteria, or an external reference"}},
                :title {:confirms #{hl7-fhir-r5-core.string/schema},
                        :zen/desc "Name for this test plan (human friendly)"},
                :_description {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_purpose {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_testTools {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :testCase {:type zen/vector,
                           :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                   :type zen/map,
                                   :keys {:sequence {:confirms #{hl7-fhir-r5-core.integer/schema},
                                                     :zen/desc "Sequence of test case in the test plan"},
                                          :_sequence {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                          :scope {:type zen/vector,
                                                  :every {:confirms #{hl7-fhir-r5-core.Reference/schema
                                                                      zen.fhir/Reference},
                                                          :zen.fhir/reference {:refers #{}},
                                                          :zen/desc "The scope or artifact covered by the case"}},
                                          :dependency {:type zen/vector,
                                                       :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                                               :type zen/map,
                                                               :keys {:description {:confirms #{hl7-fhir-r5-core.markdown/schema},
                                                                                    :zen/desc "Description of the criteria"},
                                                                      :_description {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                      :predecessor {:confirms #{hl7-fhir-r5-core.Reference/schema
                                                                                                zen.fhir/Reference},
                                                                                    :zen.fhir/reference {:refers #{}},
                                                                                    :zen/desc "Link to predecessor test plans"}},
                                                               :zen/desc "Required criteria to execute the test case"}},
                                          :testRun {:type zen/vector,
                                                    :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                                            :type zen/map,
                                                            :keys {:narrative {:confirms #{hl7-fhir-r5-core.markdown/schema},
                                                                               :zen/desc "The narrative description of the tests"},
                                                                   :_narrative {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                   :script {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                                                            :type zen/map,
                                                                            :keys {:language {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                                                                              :zen/desc "The language for the test cases e.g. 'gherkin', 'testscript'"},
                                                                                   :source {:fhir/polymorphic true,
                                                                                            :type zen/map,
                                                                                            :exclusive-keys #{#{:string
                                                                                                                :Reference}},
                                                                                            :keys {:string {:confirms #{hl7-fhir-r5-core.string/schema}},
                                                                                                   :_string {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                                                   :Reference {:confirms #{hl7-fhir-r5-core.Reference/schema
                                                                                                                           zen.fhir/Reference},
                                                                                                               :zen.fhir/reference {:refers #{}}}},
                                                                                            :zen/desc "The actual content of the cases - references to TestScripts or externally defined content"}},
                                                                            :zen/desc "The test cases in a structured language e.g. gherkin, Postman, or FHIR TestScript"}},
                                                            :zen/desc "The actual test to be executed"}},
                                          :testData {:type zen/vector,
                                                     :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                                             :type zen/map,
                                                             :keys {:type {:confirms #{hl7-fhir-r5-core.Coding/schema},
                                                                           :zen/desc "The type of test data description, e.g. 'synthea'"},
                                                                    :content {:confirms #{hl7-fhir-r5-core.Reference/schema
                                                                                          zen.fhir/Reference},
                                                                              :zen.fhir/reference {:refers #{}},
                                                                              :zen/desc "The actual test resources when they exist"},
                                                                    :source {:fhir/polymorphic true,
                                                                             :type zen/map,
                                                                             :exclusive-keys #{#{:string
                                                                                                 :Reference}},
                                                                             :keys {:string {:confirms #{hl7-fhir-r5-core.string/schema}},
                                                                                    :_string {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                                                    :Reference {:confirms #{hl7-fhir-r5-core.Reference/schema
                                                                                                            zen.fhir/Reference},
                                                                                                :zen.fhir/reference {:refers #{}}}},
                                                                             :zen/desc "Pointer to a definition of test resources - narrative or structured e.g. synthetic data generation, etc"}},
                                                             :require #{:type},
                                                             :zen/desc "The test data used in the test case"}},
                                          :assertion {:type zen/vector,
                                                      :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                                              :type zen/map,
                                                              :keys {:type {:type zen/vector,
                                                                            :every {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                                                                    :zen/desc "Assertion type - for example 'informative' or 'required' "}},
                                                                     :object {:type zen/vector,
                                                                              :every {:confirms #{hl7-fhir-r5-core.CodeableReference/schema},
                                                                                      :zen/desc "The focus or object of the assertion"}},
                                                                     :result {:type zen/vector,
                                                                              :every {:confirms #{hl7-fhir-r5-core.CodeableReference/schema},
                                                                                      :zen/desc "The actual result assertion"}}},
                                                              :zen/desc "Test assertions or expectations"}}},
                                   :zen/desc "The test cases that constitute this plan"}},
                :status {:confirms #{hl7-fhir-r5-core.code/schema},
                         :fhir/flags #{:SU :?!},
                         :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.publication-status/value-set,
                                              :strength :required},
                         :zen/desc "draft | active | retired | unknown"},
                :_name {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :url {:confirms #{hl7-fhir-r5-core.uri/schema},
                      :fhir/flags #{:SU},
                      :zen/desc "Canonical identifier for this test plan, represented as a URI (globally unique)"},
                :identifier {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.Identifier/schema},
                                     :fhir/flags #{:SU},
                                     :zen/desc "Business identifier identifier for the test plan"}},
                :_copyright {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_title {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :testTools {:confirms #{hl7-fhir-r5-core.markdown/schema},
                            :zen/desc "A description of test tools to be used in the test plan - narrative for now"},
                :_exitCriteria {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :version {:confirms #{hl7-fhir-r5-core.string/schema},
                          :fhir/flags #{:SU},
                          :zen/desc "Business version of the test plan"},
                :_version {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :contact {:type zen/vector,
                          :every {:confirms #{hl7-fhir-r5-core.ContactDetail/schema},
                                  :fhir/flags #{:SU},
                                  :zen/desc "Contact details for the publisher"}},
                :_url {:confirms #{hl7-fhir-r5-core.Element/schema}}},
         :zen.fhir/type "TestPlan"}}
