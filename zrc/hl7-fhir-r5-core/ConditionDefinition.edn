{ns hl7-fhir-r5-core.ConditionDefinition,
 import #{hl7-fhir-r5-core.DomainResource
          hl7-fhir-r5-core.value-set.condition-precondition-type
          hl7-fhir-r5-core.markdown
          hl7-fhir-r5-core.BackboneElement
          hl7-fhir-r5-core.PlanDefinition
          hl7-fhir-r5-core.boolean
          hl7-fhir-r5-core.value-set.condition-questionnaire-purpose
          zen.fhir
          hl7-fhir-r5-core.CodeableConcept
          hl7-fhir-r5-core.value-set.body-site
          hl7-fhir-r5-core.value-set.observation-category
          hl7-fhir-r5-core.UsageContext
          hl7-fhir-r5-core.string
          hl7-fhir-r5-core.value-set.version-algorithm
          hl7-fhir-r5-core.value-set.jurisdiction
          hl7-fhir-r5-core.Element
          hl7-fhir-r5-core.value-set.medication-codes
          hl7-fhir-r5-core.value-set.condition-stage
          hl7-fhir-r5-core.Questionnaire
          hl7-fhir-r5-core.dateTime
          hl7-fhir-r5-core.value-set.condition-severity
          hl7-fhir-r5-core.Reference
          hl7-fhir-r5-core.value-set.condition-code
          hl7-fhir-r5-core.value-set.observation-codes
          hl7-fhir-r5-core.CareTeam
          hl7-fhir-r5-core.code
          hl7-fhir-r5-core.Identifier
          hl7-fhir-r5-core.value-set.publication-status
          hl7-terminology-r5.value-set.medicationrequest-category
          hl7-fhir-r5-core.Coding
          hl7-fhir-r5-core.Quantity
          hl7-fhir-r5-core.uri
          hl7-fhir-r5-core.ContactDetail},
 schema {:zen.fhir/version "0.6.32",
         :confirms #{hl7-fhir-r5-core.DomainResource/schema
                     zen.fhir/Resource},
         :zen/tags #{zen/schema zen.fhir/base-schema},
         :zen.fhir/profileUri "http://hl7.org/fhir/StructureDefinition/ConditionDefinition",
         :require #{:status :code},
         :type zen/map,
         :zen/desc "A definition of a condition and information relevant to managing it.",
         :keys {:description {:confirms #{hl7-fhir-r5-core.markdown/schema},
                              :zen/desc "Natural language description of the condition definition"},
                :definition {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.uri/schema},
                                     :zen/desc "Formal Definition for the condition"}},
                :date {:confirms #{hl7-fhir-r5-core.dateTime/schema},
                       :fhir/flags #{:SU},
                       :zen/desc "Date last changed"},
                :questionnaire {:type zen/vector,
                                :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                        :type zen/map,
                                        :keys {:purpose {:confirms #{hl7-fhir-r5-core.code/schema},
                                                         :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.condition-questionnaire-purpose/value-set,
                                                                              :strength :required},
                                                         :zen/desc "preadmit | diff-diagnosis | outcome"},
                                               :_purpose {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                               :reference {:confirms #{hl7-fhir-r5-core.Reference/schema
                                                                       zen.fhir/Reference},
                                                           :zen.fhir/reference {:refers #{hl7-fhir-r5-core.Questionnaire/schema}},
                                                           :zen/desc "Specific Questionnaire"}},
                                        :require #{:purpose
                                                   :reference},
                                        :zen/desc "Questionnaire for this condition"}},
                :stage {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                        :fhir/flags #{:SU},
                        :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.condition-stage/value-set,
                                             :strength :example},
                        :zen/desc "Stage/grade, usually assessed formally"},
                :publisher {:confirms #{hl7-fhir-r5-core.string/schema},
                            :fhir/flags #{:SU},
                            :zen/desc "Name of the publisher/steward (organization or individual)"},
                :jurisdiction {:type zen/vector,
                               :every {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                       :fhir/flags #{:SU},
                                       :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.jurisdiction/value-set,
                                                            :strength :extensible},
                                       :zen/desc "Intended jurisdiction for condition definition (if applicable)"}},
                :_publisher {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :hasBodySite {:confirms #{hl7-fhir-r5-core.boolean/schema},
                              :zen/desc "Whether bodySite is appropriate"},
                :_date {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :name {:confirms #{hl7-fhir-r5-core.string/schema},
                       :fhir/flags #{:SU},
                       :zen/desc "Name for this condition definition (computer friendly)"},
                :_definition {:type zen/vector,
                              :every {:confirms #{hl7-fhir-r5-core.Element/schema}}},
                :_status {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_hasStage {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_experimental {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :useContext {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.UsageContext/schema},
                                     :fhir/flags #{:SU},
                                     :zen/desc "The context that the content is intended to support"}},
                :observation {:type zen/vector,
                              :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                      :type zen/map,
                                      :keys {:category {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                                        :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.observation-category/value-set,
                                                                             :strength :preferred},
                                                        :zen/desc "Category that is relevant"},
                                             :code {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                                    :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.observation-codes/value-set,
                                                                         :strength :example},
                                                    :zen/desc "Code for relevant Observation"}},
                                      :zen/desc "Observations particularly relevant to this condition"}},
                :versionAlgorithm {:fhir/polymorphic true,
                                   :type zen/map,
                                   :exclusive-keys #{#{:string
                                                       :Coding}},
                                   :keys {:string {:confirms #{hl7-fhir-r5-core.string/schema}},
                                          :_string {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                          :Coding {:confirms #{hl7-fhir-r5-core.Coding/schema}}},
                                   :fhir/flags #{:SU},
                                   :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.version-algorithm/value-set,
                                                        :strength :extensible},
                                   :zen/desc "How to compare versions"},
                :experimental {:confirms #{hl7-fhir-r5-core.boolean/schema},
                               :fhir/flags #{:SU},
                               :zen/desc "For testing purposes, not real usage"},
                :title {:confirms #{hl7-fhir-r5-core.string/schema},
                        :fhir/flags #{:SU},
                        :zen/desc "Name for this condition definition (human friendly)"},
                :_description {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :team {:type zen/vector,
                       :every {:confirms #{hl7-fhir-r5-core.Reference/schema
                                           zen.fhir/Reference},
                               :zen.fhir/reference {:refers #{hl7-fhir-r5-core.CareTeam/schema}},
                               :zen/desc "Appropriate team for this condition"}},
                :hasSeverity {:confirms #{hl7-fhir-r5-core.boolean/schema},
                              :zen/desc "Whether Severity is appropriate"},
                :status {:confirms #{hl7-fhir-r5-core.code/schema},
                         :fhir/flags #{:SU :?!},
                         :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.publication-status/value-set,
                                              :strength :required},
                         :zen/desc "draft | active | retired | unknown"},
                :_hasBodySite {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :subtitle {:confirms #{hl7-fhir-r5-core.string/schema},
                           :zen/desc "Subordinate title of the event definition"},
                :hasStage {:confirms #{hl7-fhir-r5-core.boolean/schema},
                           :zen/desc "Whether stage is appropriate"},
                :_name {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :severity {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                           :fhir/flags #{:SU},
                           :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.condition-severity/value-set,
                                                :strength :preferred},
                           :zen/desc "Subjective severity of condition"},
                :url {:confirms #{hl7-fhir-r5-core.uri/schema},
                      :fhir/flags #{:SU},
                      :zen/desc "Canonical identifier for this condition definition, represented as a URI (globally unique)"},
                :code {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                       :fhir/flags #{:SU},
                       :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.condition-code/value-set,
                                            :strength :example},
                       :zen/desc "Identification of the condition, problem or diagnosis"},
                :identifier {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.Identifier/schema},
                                     :fhir/flags #{:SU},
                                     :zen/desc "Additional identifier for the condition definition"}},
                :_subtitle {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :bodySite {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                           :fhir/flags #{:SU},
                           :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.body-site/value-set,
                                                :strength :example},
                           :zen/desc "Anatomical location, if relevant"},
                :_title {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :version {:confirms #{hl7-fhir-r5-core.string/schema},
                          :fhir/flags #{:SU},
                          :zen/desc "Business version of the condition definition"},
                :_version {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :_hasSeverity {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :plan {:type zen/vector,
                       :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                               :type zen/map,
                               :keys {:role {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                             :zen/desc "Use for the plan"},
                                      :reference {:confirms #{hl7-fhir-r5-core.Reference/schema
                                                              zen.fhir/Reference},
                                                  :zen.fhir/reference {:refers #{hl7-fhir-r5-core.PlanDefinition/schema}},
                                                  :zen/desc "The actual plan"}},
                               :require #{:reference},
                               :zen/desc "Plan that is appropriate"}},
                :contact {:type zen/vector,
                          :every {:confirms #{hl7-fhir-r5-core.ContactDetail/schema},
                                  :fhir/flags #{:SU},
                                  :zen/desc "Contact details for the publisher"}},
                :_url {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :medication {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                     :type zen/map,
                                     :keys {:category {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                                       :zen.fhir/value-set {:symbol hl7-terminology-r5.value-set.medicationrequest-category/value-set,
                                                                            :strength :example},
                                                       :zen/desc "Category that is relevant"},
                                            :code {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                                   :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.medication-codes/value-set,
                                                                        :strength :example},
                                                   :zen/desc "Code for relevant Medication"}},
                                     :zen/desc "Medications particularly relevant for this condition"}},
                :precondition {:type zen/vector,
                               :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                       :type zen/map,
                                       :keys {:type {:confirms #{hl7-fhir-r5-core.code/schema},
                                                     :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.condition-precondition-type/value-set,
                                                                          :strength :required},
                                                     :zen/desc "sensitive | specific"},
                                              :_type {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                              :code {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                                     :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.observation-codes/value-set,
                                                                          :strength :example},
                                                     :zen/desc "Code for relevant Observation"},
                                              :value {:fhir/polymorphic true,
                                                      :type zen/map,
                                                      :exclusive-keys #{#{:CodeableConcept
                                                                          :Quantity}},
                                                      :keys {:CodeableConcept {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema}},
                                                             :Quantity {:confirms #{hl7-fhir-r5-core.Quantity/schema}}},
                                                      :zen/desc "Value of Observation"}},
                                       :require #{:type :code},
                                       :zen/desc "Observation that suggets this condition"}}},
         :zen.fhir/type "ConditionDefinition"}}
