{ns hl7-fhir-r5-core.PackagedProductDefinition,
 import #{hl7-fhir-r5-core.DomainResource
          hl7-fhir-r5-core.value-set.product-characteristic-codes
          hl7-fhir-r5-core.markdown
          hl7-fhir-r5-core.BackboneElement
          hl7-fhir-r5-core.CodeableReference
          hl7-fhir-r5-core.boolean
          zen.fhir
          hl7-fhir-r5-core.CodeableConcept
          hl7-fhir-r5-core.string
          hl7-fhir-r5-core.MarketingStatus
          hl7-fhir-r5-core.value-set.jurisdiction
          hl7-fhir-r5-core.Element
          hl7-fhir-r5-core.Attachment
          hl7-fhir-r5-core.dateTime
          hl7-fhir-r5-core.Organization
          hl7-fhir-r5-core.Reference
          hl7-fhir-r5-core.date
          hl7-fhir-r5-core.PackagedProductDefinition
          hl7-fhir-r5-core.integer
          hl7-fhir-r5-core.Identifier
          hl7-fhir-r5-core.value-set.package-material
          hl7-fhir-r5-core.value-set.publication-status
          hl7-fhir-r5-core.ProductShelfLife
          hl7-fhir-r5-core.value-set.package-type
          hl7-fhir-r5-core.Quantity
          hl7-fhir-r5-core.MedicinalProductDefinition
          hl7-fhir-r5-core.DocumentReference
          hl7-fhir-r5-core.value-set.packaging-type
          hl7-fhir-r5-core.value-set.legal-status-of-supply},
 packaging-property-schema {:zen/tags #{zen/schema
                                        zen.fhir/structure-schema},
                            :zen.fhir/version "0.6.42",
                            :confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                            :type zen/map,
                            :keys {:type {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                          :fhir/flags #{:SU},
                                          :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.product-characteristic-codes/value-set,
                                                               :strength :example},
                                          :zen/desc "A code expressing the type of characteristic"},
                                   :value {:fhir/polymorphic true,
                                           :type zen/map,
                                           :exclusive-keys #{#{:date
                                                               :Attachment
                                                               :CodeableConcept
                                                               :Quantity
                                                               :boolean}},
                                           :keys {:CodeableConcept {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema}},
                                                  :Quantity {:confirms #{hl7-fhir-r5-core.Quantity/schema}},
                                                  :date {:confirms #{hl7-fhir-r5-core.date/schema}},
                                                  :_date {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                  :boolean {:confirms #{hl7-fhir-r5-core.boolean/schema}},
                                                  :_boolean {:confirms #{hl7-fhir-r5-core.Element/schema}},
                                                  :Attachment {:confirms #{hl7-fhir-r5-core.Attachment/schema}}},
                                           :fhir/flags #{:SU},
                                           :zen/desc "A value for the characteristic"}},
                            :require #{:type},
                            :fhir/flags #{:SU},
                            :zen/desc "General characteristics of this item"},
 packaging-schema {:zen/tags #{zen/schema zen.fhir/structure-schema},
                   :zen.fhir/version "0.6.42",
                   :confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                   :type zen/map,
                   :keys {:_quantity {:confirms #{hl7-fhir-r5-core.Element/schema}},
                          :_componentPart {:confirms #{hl7-fhir-r5-core.Element/schema}},
                          :shelfLifeStorage {:type zen/vector,
                                             :every {:confirms #{hl7-fhir-r5-core.ProductShelfLife/schema},
                                                     :fhir/flags #{:SU},
                                                     :zen/desc "Shelf Life and storage information"}},
                          :packaging {:type zen/vector,
                                      :every {:fhir/flags #{:SU},
                                              :confirms #{hl7-fhir-r5-core.PackagedProductDefinition/packaging-schema},
                                              :zen/desc "Allows containers (and parts of containers) within containers, still as a part of single packaged product"}},
                          :property {:type zen/vector,
                                     :every {:confirms #{hl7-fhir-r5-core.PackagedProductDefinition/packaging-property-schema}}},
                          :componentPart {:confirms #{hl7-fhir-r5-core.boolean/schema},
                                          :fhir/flags #{:SU},
                                          :zen/desc "Is this a part of the packaging (e.g. a cap or bottle stopper), rather than the packaging itself (e.g. a bottle or vial)"},
                          :alternateMaterial {:type zen/vector,
                                              :every {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                                      :fhir/flags #{:SU},
                                                      :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.package-material/value-set,
                                                                           :strength :example},
                                                      :zen/desc "A possible alternate material for this part of the packaging, that is allowed to be used instead of the usual material"}},
                          :type {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                 :fhir/flags #{:SU},
                                 :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.packaging-type/value-set,
                                                      :strength :example},
                                 :zen/desc "The physical type of the container of the items"},
                          :material {:type zen/vector,
                                     :every {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                             :fhir/flags #{:SU},
                                             :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.package-material/value-set,
                                                                  :strength :example},
                                             :zen/desc "Material type of the package item"}},
                          :identifier {:type zen/vector,
                                       :every {:confirms #{hl7-fhir-r5-core.Identifier/schema},
                                               :fhir/flags #{:SU},
                                               :zen/desc "An identifier that is specific to this particular part of the packaging. Including possibly a Data Carrier Identifier"}},
                          :manufacturer {:type zen/vector,
                                         :every {:confirms #{hl7-fhir-r5-core.Reference/schema
                                                             zen.fhir/Reference},
                                                 :fhir/flags #{:SU},
                                                 :zen.fhir/reference {:refers #{hl7-fhir-r5-core.Organization/schema}},
                                                 :zen/desc "Manufacturer of this packaging item (multiple means these are all potential manufacturers)"}},
                          :containedItem {:type zen/vector,
                                          :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                                  :type zen/map,
                                                  :keys {:item {:confirms #{hl7-fhir-r5-core.CodeableReference/schema},
                                                                :fhir/flags #{:SU},
                                                                :zen/desc "The actual item(s) of medication, as manufactured, or a device, or other medically related item (food, biologicals, raw materials, medical fluids, gases etc.), as contained in the package"},
                                                         :amount {:confirms #{hl7-fhir-r5-core.Quantity/schema},
                                                                  :fhir/flags #{:SU},
                                                                  :zen/desc "The number of this type of item within this packaging or for continuous items such as liquids it is the quantity (for example 25ml). See also PackagedProductDefinition.containedItemQuantity (especially the long definition)"}},
                                                  :require #{:item},
                                                  :fhir/flags #{:SU},
                                                  :zen/desc "The item(s) within the packaging"}},
                          :quantity {:confirms #{hl7-fhir-r5-core.integer/schema},
                                     :fhir/flags #{:SU},
                                     :zen/desc "The quantity of this level of packaging in the package that contains it (with the outermost level being 1)"}},
                   :fhir/flags #{:SU},
                   :zen/desc "A packaging item, as a container for medically related items, possibly with other packaging items within, or a packaging component, such as bottle cap"},
 schema {:zen/tags #{zen/schema zen.fhir/base-schema},
         :zen/desc "A medically related item or items, in a container or package.",
         :zen.fhir/type "PackagedProductDefinition",
         :zen.fhir/profileUri "http://hl7.org/fhir/StructureDefinition/PackagedProductDefinition",
         :zen.fhir/version "0.6.42",
         :confirms #{hl7-fhir-r5-core.DomainResource/schema
                     zen.fhir/Resource},
         :type zen/map,
         :keys {:description {:confirms #{hl7-fhir-r5-core.markdown/schema},
                              :fhir/flags #{:SU},
                              :zen/desc "Textual description. Note that this is not the name of the package or product"},
                :_copackagedIndicator {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :packageFor {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.Reference/schema
                                                 zen.fhir/Reference},
                                     :fhir/flags #{:SU},
                                     :zen.fhir/reference {:refers #{hl7-fhir-r5-core.MedicinalProductDefinition/schema}},
                                     :zen/desc "The product that this is a pack for"}},
                :packaging {:confirms #{hl7-fhir-r5-core.PackagedProductDefinition/packaging-schema}},
                :name {:confirms #{hl7-fhir-r5-core.string/schema},
                       :fhir/flags #{:SU},
                       :zen/desc "A name for this package. Typically as listed in a drug formulary, catalogue, inventory etc"},
                :copackagedIndicator {:confirms #{hl7-fhir-r5-core.boolean/schema},
                                      :fhir/flags #{:SU},
                                      :zen/desc "Identifies if the drug product is supplied with another item such as a diluent or adjuvant"},
                :type {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                       :fhir/flags #{:SU},
                       :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.package-type/value-set,
                                            :strength :example},
                       :zen/desc "A high level category e.g. medicinal product, raw material, shipping container etc"},
                :_description {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :characteristic {:type zen/vector,
                                 :every {:fhir/flags #{:SU},
                                         :confirms #{hl7-fhir-r5-core.PackagedProductDefinition/packaging-property-schema},
                                         :zen/desc "Allows the key features to be recorded, such as \"hospital pack\", \"nurse prescribable\""}},
                :marketingStatus {:type zen/vector,
                                  :every {:confirms #{hl7-fhir-r5-core.MarketingStatus/schema},
                                          :fhir/flags #{:SU},
                                          :zen/desc "Allows specifying that an item is on the market for sale, or that it is not available, and the dates and locations associated"}},
                :status {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                         :fhir/flags #{:SU :?!},
                         :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.publication-status/value-set,
                                              :strength :preferred},
                         :zen/desc "The status within the lifecycle of this item. High level - not intended to duplicate details elsewhere e.g. legal status, or authorization/marketing status"},
                :_name {:confirms #{hl7-fhir-r5-core.Element/schema}},
                :identifier {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r5-core.Identifier/schema},
                                     :fhir/flags #{:SU},
                                     :zen/desc "A unique identifier for this package as whole - not for the content of the package"}},
                :containedItemQuantity {:type zen/vector,
                                        :every {:confirms #{hl7-fhir-r5-core.Quantity/schema},
                                                :fhir/flags #{:SU},
                                                :zen/desc "A total of the complete count of contained items of a particular type/form, independent of sub-packaging or organization. This can be considered as the pack size. See also packaging.containedItem.amount (especially the long definition)"}},
                :statusDate {:confirms #{hl7-fhir-r5-core.dateTime/schema},
                             :fhir/flags #{:SU},
                             :zen/desc "The date at which the given status became applicable"},
                :manufacturer {:type zen/vector,
                               :every {:confirms #{hl7-fhir-r5-core.Reference/schema
                                                   zen.fhir/Reference},
                                       :fhir/flags #{:SU},
                                       :zen.fhir/reference {:refers #{hl7-fhir-r5-core.Organization/schema}},
                                       :zen/desc "Manufacturer of this package type (multiple means these are all possible manufacturers)"}},
                :attachedDocument {:type zen/vector,
                                   :every {:confirms #{hl7-fhir-r5-core.Reference/schema
                                                       zen.fhir/Reference},
                                           :fhir/flags #{:SU},
                                           :zen.fhir/reference {:refers #{hl7-fhir-r5-core.DocumentReference/schema}},
                                           :zen/desc "Additional information or supporting documentation about the packaged product"}},
                :legalStatusOfSupply {:type zen/vector,
                                      :every {:confirms #{hl7-fhir-r5-core.BackboneElement/schema},
                                              :type zen/map,
                                              :keys {:code {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                                            :fhir/flags #{:SU},
                                                            :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.legal-status-of-supply/value-set,
                                                                                 :strength :example},
                                                            :zen/desc "The actual status of supply. In what situation this package type may be supplied for use"},
                                                     :jurisdiction {:confirms #{hl7-fhir-r5-core.CodeableConcept/schema},
                                                                    :fhir/flags #{:SU},
                                                                    :zen.fhir/value-set {:symbol hl7-fhir-r5-core.value-set.jurisdiction/value-set,
                                                                                         :strength :example},
                                                                    :zen/desc "The place where the legal status of supply applies"}},
                                              :fhir/flags #{:SU},
                                              :zen/desc "The legal status of supply of the packaged item as classified by the regulator"}},
                :_statusDate {:confirms #{hl7-fhir-r5-core.Element/schema}}}}}
